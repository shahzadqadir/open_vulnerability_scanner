from django.db import models
from django.contrib.auth import get_user_model

API_STATUS = {
    "active": "Active",
    "disabled": "Disabled"
}


class Device(models.Model):
    """Represent network device"""

    ip_address = models.CharField(max_length=255)
    ios_release = models.CharField(max_length=255)
    prod_id = models.CharField(max_length=255)


class API(models.Model):
    """Represent Cisco API"""

    name = models.CharField(max_length=255)
    key = models.CharField(max_length=255)
    client_secret = models.CharField(max_length=255)
    status = models.CharField(max_length=255, choices=API_STATUS)
    owner = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)


class OS(models.Model):
    """Class to represent Cisco IOS"""
    os_version = models.CharField(max_length=1000)
    os_type = models.CharField(max_length=1000)

    def __str__(self):
        return f"{self.os_type}, {self.os_version}"


class Advisory(models.Model):
    """Maps to Advisory class"""

    cisco_advisory_id = models.CharField(max_length=10000)
    advisory_title = models.CharField(max_length=1000)
    bug_ids = models.CharField(max_length=1000)
    ips_signature = models.CharField(max_length=10000)
    cves = models.CharField(max_length=10000)
    cvrf_url = models.CharField(max_length=10000)
    csaf_url = models.CharField(max_length=10000)
    cvss_base_score = models.CharField(max_length=10000)
    cwe = models.CharField(max_length=10000)
    ios_release = models.CharField(max_length=10000)
    first_fixed = models.CharField(max_length=10000)
    first_published = models.CharField(max_length=10000)
    last_updated = models.CharField(max_length=10000)
    status = models.CharField(max_length=10000)
    version = models.CharField(max_length=10000)
    product_names = models.TextField()
    publication_url = models.CharField(max_length=10000)
    sir = models.CharField(max_length=10000)
    summary = models.TextField()
    smu = models.CharField(max_length=10000)
    os = models.ForeignKey(OS, on_delete=models.CASCADE, related_name="advisories")

    def __str__(self):
        return f"Cisco Advisory: {self.cisco_advisory_id}"